---GENEL KURULUMLAR---
->Öncelikle node.js'i kur
->Terminale 'npm install -g @angular/cli' yaz
->Terminalden Angular projesini kurmak istediğin dizine gel ve 'ng new proje_adı' yaz
->Bootstrap için 'npm install bootstrap@x.x.x' yaz (x.x.x versiyon bilgisidir sitede yazıyor, sitede başında v var onu kaldır öyle yaz)
->Bootstrap'i aktif etmek için angular.json dosyasına gelip oradaki styles kısmına(30. satır) './node_component/bootstrap/dist/css/bootstrap.min.css' yaz


---API'ye bağlanma---
Angular tarafı:
	services altındaki her bir servise import { HttpClient } from '@angular/common/http'; yaz
	app.module.ts ye gel import { HttpClientModule } from '@angular/common/http'; yaz sonra imports kısmına gel en altına HttpClientModule yaz
C# tarafı:
	Startup.cs ye gel ConfigureServices kısmına services.AddCors(); yaz. Configure kısmına gel app.UseCors(builder=>builder.WithOrigins("http://localhost:4200").AllowAnyHeader()); yaz
	

---Component, Servis, Pipe, Interceptor, Guard Kurulumu---
->Component Kurulumu : src/app altında components dizini oluştur. Terminalden o dizine gel ve 'ng g component component_ismi' yaz
->Servis Kurulumu : src/app altında services dizini oluştur. Terminalden o dizine gel ve 'ng g service servis_ismi'
->Pipe Kurulumu : src/app altında pipes dizini oluştur. Terminalden o dizine gel ve 'ng g pipe pipe_ismi'
->Interceptor Kurulumu : src/app altında interceptors dizini oluştur. Terminalden o dizine git ve 'ng g interceptor interceptor_ismi' yaz
->Guard Kurulumu: src/app altında guards dizini oluştur. Terminalden o dizine git ve 'ng g guard guard_ismi' yaz

---Jquery---
npm install jquery yazarak yüklenir.
angular.json dosyasına gel 34. satırda script var onun içine
"./node_modules/jquery/dist/jquery.min.js", 
"./node_modules/bootstrap/dist/js/bootstrap.min.js"
yaz


---Formlarla çalışırken---
Öncelikle hangi componentte çalışıyorsak onun ts dosyasına gidip veriyi tutacak değişken oluşturuyoruz.
Daha sonra inputun içine gelip [(ngModel)]="degisken_adı" yazıyoruz.(Bunun çalışması için aşağıdaki adımları yap)
app.module.ts ye gelip import { FormsModule } from '@angular/forms' yazıp import kısmına gel ve FormsModule yaz


---Toastr ve animation---
npm install ngx-toastr
npm install @angular/animations
Daha sonra angular.json'a gel style kısmına "./node_modules/ngx-toastr/toastr.css" yaz
app.module.ts ye gel 
import { ToastrModule } from 'ngx-toastr' yaz sonrasında 
imports kısmına gel ve ToastrModule.forRoot({positionClass:"toast-bottom-right"}) yaz
import { BrowserAnimationsModule } from '@angular/platform-browser/animations'
yine import kısmına gelip BrowserAnimationsModule yaz


---Form için---
app.component.ts ye gel
import { FormsModule, ReactiveFormsModule } from '@angular/forms' importunu yaz
imports kısmına da  FormsModule ve ReactiveFormsModule yaz


---Interceptor---
app.module.ts dosyasına git providers kısmına gel ve köşeli parantez içine
{
	provide:HTTP_INTERCEPTORS,
	useClass:AuthInterceptor,
	multi:true
}
yaz




---Bölümler Hakkında---
Component: Verileri yönettiğimiz ve gösterdiğimiz kısım
Service: Entityler için c# taki gibi servisler sunduğumuz kısım (verileri çekme işi vs burda yapılır)
Directive: c# ta metod başına [] ile yazıp özellik vermemiz gibi
Model: Apideki veriye uygun şablon oluşturduğumuz kısım
Pipe: Datayı görsel olarak farklı biçimde göstermeyi sağlar.
Interceptor: .net tarafında [] içine yazdığımız aspectlere benzer işler yaparlar.
Guard: yetkisi olmayan veya giriş yapmayan birinin istenmeyen sayfalara gidişini engeller.(Örn giriş yapmamış birisi ürün eklemek isterse onu logine yönlendirir)

app-routing.module.ts : routeların önce buraya yaz
app.module.ts : Dışardan elimizle import ettiimiz modülleri burada belirtiyoruz